name: Deploy

on:
  push:
    branches:
      - main
      - staging
      - develop
  pull_request:
    branches:
      - main
      - staging
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: '10.8.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm check-types

  deploy:
    needs: lint
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v3
        with:
          version: '10.8.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set deployment environment
        id: deployment
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "BUILD_CMD=build:prod" >> $GITHUB_ENV
            echo "VERCEL_BUILD_CMD=build:vercel" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
            echo "BUILD_CMD=build:staging" >> $GITHUB_ENV
            echo "VERCEL_BUILD_CMD=build:vercel" >> $GITHUB_ENV
          else
            echo "environment=preview" >> $GITHUB_OUTPUT
            echo "BUILD_CMD=build" >> $GITHUB_ENV
            echo "VERCEL_BUILD_CMD=build:vercel" >> $GITHUB_ENV
          fi

      - name: Setup Turborepo Remote Cache
        uses: dtinth/setup-github-actions-caching-for-turbo@v1

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ./
          vercel-args: '--${{ steps.deployment.outputs.environment }} --build-env TURBO_ENV_MODE=loose --build-env NODE_ENV=${{ steps.deployment.outputs.environment }}'
